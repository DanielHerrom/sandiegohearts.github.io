myapp <- oauth_app("github",
key = "617674ba2801524f2e58",
secret = "28e731327c5633af3c9d35e8a5222d271deaba4d")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
json1 = content(req)
json2 = jsonlite::fromJSON(jsonlite::toJSON(json1))
head(json2)
json2[json2$full_name == "jtleek/datasharing",] # 2013-11-07T13:25:07Z
?oauth2.0_token
oauth_endpoints("github")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "617674ba2801524f2e58",
secret = "28e731327c5633af3c9d35e8a5222d271deaba4d")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "617674ba2801524f2e58",
secret = "28e731327c5633af3c9d35e8a5222d271deaba4d")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
#install.packages("jsonlite")
library("jsonlite")
#install.packages("httpuv")
library("httpuv")
#install.packages("httr")
library("httr")
oauth_endpoints("github")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "617674ba2801524f2e58",
secret = "28e731327c5633af3c9d35e8a5222d271deaba4d")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
gtoken
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "617674ba2801524f2e58",
secret = "28e731327c5633af3c9d35e8a5222d271deaba4d")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
?GET
?oauth2.0_token
library(httpuv)
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "617674ba2801524f2e58",
secret = "28e731327c5633af3c9d35e8a5222d271deaba4d")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
?oauth_app
?oauth_endpoints
oauth_endpoints("github")
myapp <- oauth_app(appname = "Youtube_Michael_Galarnyk",
key = "8758a6bf9a146e1da0c1",
secret = "b9504edde46b794414495bd9c33ea28cbfd87824")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
json1 = content(req)
json2 = jsonlite::fromJSON(jsonlite::toJSON(json1))
head(json2)
json2[json2$full_name == "jtleek/datasharing",] # 2013-11-07T13:25:07Z
json2[json2$full_name == "jtleek/datasharing",]
json1
json1 = content(req)
json2 = jsonlite::fromJSON(jsonlite::toJSON(json1))
json2
json2[json2$full_name == "jtleek/datasharing", "created_at"]
?fromJSON
?oauth_endpoints
?content
colnames(json2)
?stop_for_status
?oauth_endpoints
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
# Change based on what you
myapp <- oauth_app(appname = "Subscribe_Please",
key = "bf4a3e8d230161c67e7e",
secret = "f2cc168c146a35dfcd69c48e32fbdcb248ea9a7e")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
gitDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
# Subset data.frame
gitDF[gitDF$full_name == "jtleek/datasharing", "created_at"]
?oauth_endpoints
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
?GET
source('~/Desktop/datasciencecoursera/3_Getting_and_Cleaning_Data/AccessingDataTwitterAPI.R', echo=TRUE)
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
# Can be github, linkedin etc depending on application
oauth_endpoints("twitter")
# Change based on your appname, key, and secret
myapp <- oauth_app(appname = "Subscribe_Please",
key = "4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB",
secret = "	AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("twitter"), myapp)
?oauth2.0_token
?sign_oauth2.0
?oauth2.0_token
?sign_oauth1.0
?oauth_app
install.packages("twitteR")
?GET
consumer_key <- "4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB"
consumer_secret <- "AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq"
access_token <- 	"4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB"
access_secret <- "AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
interest <- paste0("https://api.twitter.com/1.1/search/tweets.json?q=", "Donald Trump")
req <- GET(interest)
req
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
tweetDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
tweetDF
req <- GET("https://api.twitter.com/1.1/statuses/home_timeline.json")
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
tweetDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
tweetDF
library(twitteR)
?searchTwitter
?saveRDS
?twListToDF
?searchTwitter
tw = searchTwitter('#MSST2016', n = 1e4, since = '2016-04-01')
d = twListToDF(tw)
?twListToDF
tw = searchTwitter('#MSST2016', n = 1e4, since = '2016-04-01')
d = twitteR::twListToDF(tw)
tw = twitteR::searchTwitter('#MSST2016', n = 1e4, since = '2016-04-01')
d = twitteR::twListToDF(tw)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tw = twitteR::searchTwitter('#MSST2016', n = 1e4, since = '2016-04-01')
d = twitteR::twListToDF(tw)
consumer_key <- "	OQMbUsBfWQ1mVUGASpSArbG33"
consumer_secret <- "GQ5kc0BlwJZE2FYyvv8cxn845z32ES6HsID87cawkQ075jwyIy"
access_token <- 	"4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB"
access_secret <- "AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tw = twitteR::searchTwitter('#MSST2016', n = 1e4, since = '2016-04-01')
d = twitteR::twListToDF(tw)
consumer_key <- "	OQMbUsBfWQ1mVUGASpSArbG33"
consumer_secret <- "GQ5kc0BlwJZE2FYyvv8cxn845z32ES6HsID87cawkQ075jwyIy"
access_token <- 	"4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB"
access_secret <- "AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
consumer_key <- "OQMbUsBfWQ1mVUGASpSArbG33"
consumer_secret <- "GQ5kc0BlwJZE2FYyvv8cxn845z32ES6HsID87cawkQ075jwyIy"
access_token <- 	"4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB"
access_secret <- "AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tw = twitteR::searchTwitter('#MSST2016', n = 1e4, since = '2016-04-01')
d = twitteR::twListToDF(tw)
tw = twitteR::searchTwitter('#UCSD', n = 1e4, since = '2016-04-01')
d = twitteR::twListToDF(tw)
D
d
class(d)
#install.packages("jsonlite")
library(jsonlite)
#install.packages("twitteR")
library(twitteR)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
#oauth2.0_token
# Can be github, linkedin etc depending on application
# # Change based on your appname, key, and secret
# myapp <- oauth_app(appname = "Subscribe_Please",
#                    key = "4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB",
#                    secret = "	AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq")
#
# # Get OAuth credentials
# github_token <- oauth2.0_token(oauth_endpoints("twitter"), myapp)
#
# # Use API
# gtoken <- config(token = github_token)
#####
#queries = ['UCSD', 'Donald Trump', 'Syria']
consumer_key <- "OQMbUsBfWQ1mVUGASpSArbG33"
consumer_secret <- "GQ5kc0BlwJZE2FYyvv8cxn845z32ES6HsID87cawkQ075jwyIy"
access_token <- 	"4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB"
access_secret <- "AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tw = twitteR::searchTwitter('#realDonaldTrump + #Hillary Clinton', n = 1e4, since = '2016-04-01')
d = twitteR::twListToDF(tw)
#install.packages("jsonlite")
library(jsonlite)
#install.packages("twitteR")
library(twitteR)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
#oauth2.0_token
# Can be github, linkedin etc depending on application
# # Change based on your appname, key, and secret
# myapp <- oauth_app(appname = "Subscribe_Please",
#                    key = "4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB",
#                    secret = "	AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq")
#
# # Get OAuth credentials
# github_token <- oauth2.0_token(oauth_endpoints("twitter"), myapp)
#
# # Use API
# gtoken <- config(token = github_token)
#####
#queries = ['UCSD', 'Donald Trump', 'Syria']
consumer_key <- "OQMbUsBfWQ1mVUGASpSArbG33"
consumer_secret <- "GQ5kc0BlwJZE2FYyvv8cxn845z32ES6HsID87cawkQ075jwyIy"
access_token <- 	"4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB"
access_secret <- "AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tw = twitteR::searchTwitter('#realDonaldTrump + #HillaryClinton', n = 1e4, since = '2016-04-01')
d = twitteR::twListToDF(tw)
d
d
colnames(d)
d[, "longitude"]
?searchTwitter
searchTwitter('#realDonaldTrump + #HillaryClinton', n = 1e4, since = '2016-11-08', until = '2016-11-09')
#install.packages("jsonlite")
library(jsonlite)
#install.packages("twitteR")
library(twitteR)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
#oauth2.0_token
# Can be github, linkedin etc depending on application
# # Change based on your appname, key, and secret
# myapp <- oauth_app(appname = "Subscribe_Please",
#                    key = "4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB",
#                    secret = "	AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq")
#
# # Get OAuth credentials
# github_token <- oauth2.0_token(oauth_endpoints("twitter"), myapp)
#
# # Use API
# gtoken <- config(token = github_token)
#####
#queries = ['UCSD', 'Donald Trump', 'Syria']
consumer_key <- "OQMbUsBfWQ1mVUGASpSArbG33"
consumer_secret <- "GQ5kc0BlwJZE2FYyvv8cxn845z32ES6HsID87cawkQ075jwyIy"
access_token <- 	"4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB"
access_secret <- "AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tw = twitteR::searchTwitter('#realDonaldTrump + #HillaryClinton', n = 1e4, since = '2016-04-01')
d = twitteR::twListToDF(tw)
consumer_key <- "OQMbUsBfWQ1mVUGASpSArbG33"
consumer_secret <- "GQ5kc0BlwJZE2FYyvv8cxn845z32ES6HsID87cawkQ075jwyIy"
access_token <- 	"4338966852-lBmLvEg9mADHIdjK2hT4W5mtHmI9jRKxcV4PTrB"
access_secret <- "AwKRZw9AvTMvMrb2jouX5JHTjDASI3zeceVsemgQa1SSq"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tw = twitteR::searchTwitter('#realDonaldTrump + #HillaryClinton', n = 1e4, since = '2016-11-08', retryOnRateLimit = 1e3)
d = twitteR::twListToDF(tw)
d
library("sqldf")
sqldf("select pwgtp1 from acs where AGEP < 50")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
acs <- data.table::data.table(read.csv(f))
acs
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
acs$AGEP
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
# Change based on your appname, key, and secret
myapp <- oauth_app(appname = "Youtube_Michael_Galarnyk",
key = "8758a6bf9a146e1da0c1",
secret = "b9504edde46b794414495bd9c33ea28cbfd87824")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
gitDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
library(httr)
require(httpuv)
require(jsonlite)
# 1. Find OAuth settings for github: http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
# Insert your values below - if secret is omitted, it will look it up in the
# GITHUB_CONSUMER_SECRET environmental variable.  Use http://localhost:1410
# as the callback url
myapp <- oauth_app("quiz2", "ddb0d599de51ccd02f4b", secret = "6af1109f6ecf442d292425087d49bb13d9bbe9c8")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
# Change based on what you
myapp <- oauth_app(appname = "Coursera_John_Hopkins",
key = "8758a6bf9a146e1da0c1",
secret = "b9504edde46b794414495bd9c33ea28cbfd87824")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n = 10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12",
"filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler",
"sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header = FALSE, skip = 4, col.names = colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
?xtab
?xtabs
source('~/Desktop/datasciencecoursera/3_Getting_and_Cleaning_Data/AccessingDataTwitterAPI.R', echo=TRUE)
d
?strsplit
dt <- data.table::fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
varNames <- names(dt)
varNamesSplit <- strsplit(varNames, "wgtp")
varNamesSplit[[123]]
communities <- data.table::fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
varNames <- names(communities)
varNamesSplit <- strsplit(varNames, "wgtp")
varNamesSplit[[123]]
data.table(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv, skip=5, nrows=190)
dtGDP <- data.table('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
, skip=5
, nrows=190)
dtGDP <- data.table::data.table('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
, skip=5
, nrows=190)
dtGDP
dtGDP <- data.table::data.table('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
, skip=6
, nrows=190)
dtGDP
dtGDP <- data.table::fread('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
, skip=5
, nrows=190)
dtGDP
getwd()
library("data.table")
library("ggmap")
library("maptools");
library("gpclib");
install.packages("gpclib")
install.packages("sp")
install.packages("sp")
setwd("~/Desktop/2017-Team-203/Data/Zip_CodesShapeFiles")
library("data.table")
library("ggmap")
library("maptools");
library("gpclib");
library("sp");
gpclibPermit()
?gpclibPermit
shapefile <- readShapeSpatial('ZIP_CODES.shp')
shapefile
fortify(shapefile)
data <- fortify(shapefile)
class(data)
data <- data.table::as.data.table(data)
data
?gpclibPermit
shapefile
?readShapePoly
install.packages("rgdal")
library("rgdal")
shapefile <- readOGR("", "ZIP_CODES.shp")
?readOGR
shapefile <- readOGR("~/Desktop/2017-Team-203/Data/Zip_CodesShapeFiles", "ZIP_CODES.shp")
shapefile <- readOGR("~/Desktop/2017-Team-203/Data/Zip_CodesShapeFiles/", "ZIP_CODES.shp")
shapefile <- readOGR("/", "ZIP_CODES.shp")
shapefile <- readOGR(".", "ZIP_CODES")
shapefile
data <- fortify(shapefile)
data
shapefile <- readOGR(".", "ZIP_CODES")
shapefile
class(shapefile)
names(shapefile)
shapefile$ZIP
typeof(shapefile)
setwd("~/Desktop/2017-Team-203/Data/Zip_CodesShapeFiles")
shapefile <- readShapeSpatial('ZIP_CODES.shp')
shapefile
shapefile <- readShapeSpatial('ZIP_CODES.shp')
shapefile
shapefile$COMMUNITY
setwd("~/Desktop/2017-Team-203/Data/Zip_CodesShapeFiles")
shapefile <- readShapeSpatial('ZIP_CODES.shp')
names(shapefile)
zipDT <- data.table(zipcode = shapefile$ZIP
, community = shapefile$COMMUNITY)
zipDT
?gpclimb
?data.table::fwrite
